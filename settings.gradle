pluginManagement {
    plugins {
        id 'org.springframework.boot' version '3.1.5'
        id 'io.spring.dependency-management' version '1.1.3'
        id 'org.jetbrains.kotlin.jvm' version '1.9.10'
        id 'org.jetbrains.kotlin.plugin.spring' version '1.9.10'
    }
}

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('springBoot', '3.1.5')
            version('lunceneVersion', '9.8.0')
            version('gmailApi', 'v1-rev20231002-2.0.0')
            version('guavaVersion', '32.1.3-jre')
            version('googleLib', '2.2.0')
            version('googleOauth', '1.4.0')
            version('jakartaMail', '2.1.1')
            version('commonLang3Version', '3.13.0')
            version('ehcacheVersion', '3.10.8')
            version('logback', '1.4.8')
            version('slf4j', '2.0.7')
            version('googleAutoService', '1.0.1')
            version('netty', '4.1.100.Final')
            version('nettyQuic', '0.0.20.Final')
            version('commonLogging', '1.2')
            version('projectVersion', '1.0.0')

            library('lucene-core', 'org.apache.lucene', 'lucene-core').versionRef('lunceneVersion')
            library('lucene-queryparser', 'org.apache.lucene', 'lucene-queryparser').versionRef('lunceneVersion')
            library('lucene-analysis-common', 'org.apache.lucene', 'lucene-analysis-common').versionRef('lunceneVersion')
            bundle('lucene', ['lucene-core', 'lucene-queryparser', 'lucene-analysis-common'])

            library('google-api-services-gmail', 'com.google.apis', 'google-api-services-gmail').versionRef('gmailApi')
            library('google-api-client', 'com.google.api-client', 'google-api-client').versionRef('googleLib')
            library('google-auth-library-oauth2-http', 'com.google.auth', 'google-auth-library-oauth2-http').versionRef('googleOauth')
            library('jakarta.mail-api', 'jakarta.mail', 'jakarta.mail-api').versionRef('jakartaMail')
            bundle('gmail.service', ['google-api-services-gmail', 'google-api-client', 'google-auth-library-oauth2-http', 'jakarta.mail-api'])

            library('guava', 'com.google.guava', 'guava').versionRef('guavaVersion')
            library('commons-lang3', 'org.apache.commons', 'commons-lang3').versionRef('commonLang3Version')
            bundle('guava', ['guava', 'commons-lang3'])

            library('ehcache', 'org.ehcache', 'ehcache').versionRef('ehcacheVersion')
            bundle('cache', ['ehcache'])

            library('logback-core', 'ch.qos.logback', 'logback-core').versionRef('logback')
            library('logback-classic', 'ch.qos.logback', 'logback-classic').versionRef('logback')
            library('logback-access', 'ch.qos.logback', 'logback-access').versionRef('logback')
            library('slf4j', 'org.slf4j', 'slf4j-api').versionRef('slf4j')
            bundle('logback', ['logback-core', 'logback-classic', 'slf4j', 'logback-access'])

            library('log4j2', 'org.springframework.boot', 'spring-boot-starter-log4j2').versionRef('springBoot')
            library('common-logging', 'commons-logging', 'commons-logging').versionRef('commonLogging')
            bundle('loggingCompile', ['log4j2', 'common-logging'])

            library('netty-all', 'io.netty', 'netty-all').versionRef('netty')
            library('netty-codec-stomp', 'io.netty', 'netty-codec-stomp').versionRef('netty')
            library('netty-incubator-codec-http3', 'io.netty.incubator', 'netty-incubator-codec-http3').versionRef('nettyQuic')
            bundle('netty', ['netty-all', 'netty-incubator-codec-http3'])
        }
    }
    repositories {
        maven { url 'https://maven.geotoolkit.org' }
        maven { url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/' }
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/release' }
        maven { url 'https://repo1.maven.org/maven2/' }
        maven { url 'https://repo.spring.io/milestone' }
    }
}

rootProject.name = 'framework'
include 'javen-core'
findProject('javen-core')?.name = 'core'
